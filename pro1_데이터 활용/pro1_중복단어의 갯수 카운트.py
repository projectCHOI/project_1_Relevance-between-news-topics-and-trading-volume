from collections import Counter

# 1차 130개 단어
# words = [
#         # 불용어 448
#         "투자","공모","기업","보안","쉴더스","시장","사이버","뱅크","클라우드","사업",
#         "매출","투자자","증권","회사","추진","청약","평가","가치","심사","글로벌",
#         "기록","프로","성장","공개","자회사","케어","대표","지난해","공동","캡스",

#         "보안","서비스","공격","증시","공모","랜섬","웨어","위협","안전","솔루션",
#         "로봇","희망","흥행","플랫폼","선두","데이터","상황","영상","고객","쉴더스",
#         "시장","포인트","랭킹","기술","하반기","금융","하면","대응","은퇴","합계",
#         # 토픽감소
#         "상금","보안","스토어","서비스","무인","기업","시장","솔루션","박민지","기록",
#         "금융","고객","포인트","사이버","챔피언십","공격","로봇","프랫폼","사업","기술",
#         "카카오","프로","매장","영상","선두","메타","증권","대응","시드","랜섬",

#         "공모","철회","투자","투자자","청약","뱅크","심사","시장","주주","기업",
#         "예비","가치","증권","자금","증시","분할","주식","흥행","평가","기업가",
#         "거래소","주가","컬리","쉴더스","회사","희망","자회사","거래","은퇴","배당",
        
#         "에스원","SK 쉴더스","KT텔레캅","아이디스","코로나","인증", "백신패스","백신", "QR","코드"

#          ]

# 2차 82개 단어
words = [
        # 불용어 448
        "클라우드",
        "매출","추진","글로벌",
        "성장","공개","케어","대표","캡스",

        "웨어","위협","안전",
        "플랫폼","데이터",
        "랭킹","하반기",
        # 토픽감소
        "상금","보안","스토어","서비스","무인","솔루션","박민지","기록",
        "금융","고객","포인트","사이버","챔피언십","공격","로봇","프랫폼","사업","기술",
        "카카오","프로","매장","영상","선두","메타","대응","시드","랜섬",

        "공모","철회","투자","투자자","청약","뱅크","심사","시장","주주","기업",
        "예비","가치","증권","자금","증시","분할","주식","흥행","평가","기업가",
        "거래소","주가","컬리","쉴더스","회사","희망","자회사","거래","은퇴","배당",
        
        "에스원","SK 쉴더스","KT텔레캅","아이디스","코로나"
        "인증", "백신패스","백신", "QR","코드"

         ]

# 전체 단어의 개수
print(f"주어진 단어 목록의 총 개수: {len(words)}")

# 단어의 빈도수를 세고, 1회 이상 나타난 단어들을 찾기
word_counts = Counter(words)
duplicates_with_counts = {word: count for word, count in word_counts.items() if count > 1}

# 중복된 단어가 없으면 메시지 출력
if not duplicates_with_counts:
    print("일치 없음")
else:
    print(duplicates_with_counts)